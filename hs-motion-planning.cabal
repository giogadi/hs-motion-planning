-- Initial hs-motion-planning.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hs-motion-planning
version:             0.1.0.0
synopsis:            A motion planning library written in Haskell
-- description:
homepage:            https://github.com/giogadi/hs-motion-planning
license:             MIT
license-file:        LICENSE
author:              Luis G. Torres
maintainer:          lgtorres42@gmail.com
-- copyright:
category:            AI
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

library
  exposed-modules:      Data.MotionPlanningProblem,
                        Data.Spaces.EuclideanSpace,
                        Data.Spaces.Point2DSpace,
                        Data.NearestNeighbors,
                        Data.Trees.KdTree,
                        Data.Trees.DynamicKdTree,
                        Planners.RRT
                        -- Planners.PRM
  hs-source-dirs:       lib-src
  -- other-modules:
  -- other-extensions:
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        random >=1.0 && <1.1,
                        containers >=0.5.0.0 && <0.6,
                        MonadRandom >=0.1.12 && <0.2,
                        mersenne-random-pure64 >=0.2.0.4 && <0.3,
                        fixed-list ==0.1.5,
                        fgl >=5.4.2.4 && <5.6,
                        pqueue >=1.2.1 && <1.3,
                        deepseq >=1.1.0.0,
                        QuickCheck >= 2.7.6 && <2.8,
                        vector >=0.10.11.0 && <0.11,
                        deepseq-generics >=0.1.1.1
  default-language:     Haskell2010

executable RRT2DExample
  main-is:              Examples/RRT2DExample.hs
  hs-source-dirs:       app-src
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        hs-motion-planning -any
  default-language:     Haskell2010

executable RRT2DKDTExample
  main-is:              Examples/RRT2DKDTExample.hs
  hs-source-dirs:       app-src
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        hs-motion-planning -any
  default-language:     Haskell2010

executable RRT3DExample
  main-is:              Examples/RRT3DExample.hs
  hs-source-dirs:       app-src
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        fixed-list ==0.1.5,
                        hs-motion-planning -any
  default-language:     Haskell2010

-- executable RRG2DExample
--   main-is:              Examples/RRG2DExample.hs
--   hs-source-dirs:       app-src
--   ghc-options:          -Wall -O3
--   build-depends:        base >=4.6.0.1,
--                         hs-motion-planning -any
--   default-language:     Haskell2010

benchmark RRTBenchmark
  main-is:              Benchmarks/RRTBenchmark.hs
  hs-source-dirs:       app-src
  type:                 exitcode-stdio-1.0
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        hs-motion-planning -any,
                        criterion >= 1.0.0.0 && <1.1
  default-language:     Haskell2010

benchmark KDTBenchmark
  main-is:              Benchmarks/KDTBenchmark.hs
  hs-source-dirs:       app-src
  type:                 exitcode-stdio-1.0
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        hs-motion-planning -any,
                        MonadRandom >=0.1.12 && <0.2,
                        mersenne-random-pure64 >=0.2.0.4 && <0.3,
                        criterion >= 1.0.0.0 && <1.1
  default-language:     Haskell2010

Test-Suite KdTreeTest
  type:                 exitcode-stdio-1.0
  main-is:              Tests/KdTreeTest.hs
  hs-source-dirs:       app-src
  ghc-options:          -Wall -O3
  build-depends:        base >=4.6.0.1,
                        hs-motion-planning -any
  default-language:     Haskell2010
